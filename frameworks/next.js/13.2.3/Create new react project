1. Install pnpm
   - npm install -g pnpm
2. Create a React project
   - pnpm create next-app project-name --typescript --eslint
3 -1. Create a file ".npmrc"
  -2. add " auto-install-peers=true "
4. tsconfig.json
 - {
     "compilerOptions": {
       ...
       "baseUrl": ".",
     }
     "exclude": ["node_modules", ".next"]
   }
5. next.config.js
 - const nextConfig = {
     ...
     swcMinify: true,
   }

6. package.json ($npm_package_)
 - "scripts": {
     ...
     "add-etc": "pnpm add %npm_package_my_d_etc%",
     "add-etcd": "pnpm add %npm_package_my_d_etcd%",
     "add-twc": "pnpm add %npm_package_my_d_twc%",
     "add-mui": "pnpm add %npm_package_my_d_mui%"
   },
   "my": {
     "d": {
       "etc": "styled-components @types/styled-components clsx date-fns",
       "etcd": "-D sass jest",
       "twc": "-D tailwindcss postcss autoprefixer",
       "mui": "@mui/material @emotion/react @emotion/styled @fontsource/roboto @mui/icons-material"
     }
   },

* Sass (https://nextjs.org/docs/basic-features/built-in-css-support#sass-support)
 1. convert all .css to .scss
   (except "globals.css" for Tailwindcss)
 2. " _variables.scss ", " _mixins.scss " in styles folder
 3. next.config.js
  - const path = require('path')
    const nextConfig = {
      sassOptions: {
        includePaths: [path.join(__dirname, 'styles')],
        prependData: `@import "styles/_variables.scss"; @import "styles/_mixins.scss";`
      },
    };

* Tailwindcss (https://tailwindcss.com/docs/installation)
 1. npx tailwindcss init -p
 2. tailwind.config.js
   - /** @type {import('tailwindcss').Config} */
     module.exports = {
       content: [
         "./pages/*.{js,ts,jsx,tsx}",
         "./components/*.{js,ts,jsx,tsx}"
       ],
       ...
     };
 3. globals.css
   - /** This injects Tailwind's base styles and any base styles registered by plugins. */
     @tailwind base;
     /** This injects Tailwind's component classes and any component classes registered by plugins. */
     @tailwind components;
     /** This injects Tailwind's utility classes and any utility classes registered by plugins. */
     @tailwind utilities;

* Styled-components
 1. next.config.js
   - compiler: {
      styledComponents: true
    },
 2. 기본 element 에서 css prop 에러 발생 시
   - ex) <div css={` ... `} />  // Type '{ css: string; }' is not assignable to ...

* Jest
 - https://nextjs.org/docs/advanced-features/compiler#jest

/* Layout */
 - per-page layout pattern
 - can fetch data on the client-side using SWR || useEffect inside layout
 - can't use "getStaticProps" || "getServerSideProps"
